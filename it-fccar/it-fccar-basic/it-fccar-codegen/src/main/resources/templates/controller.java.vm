package ${package.Controller};

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.tags.Tag;
import javax.validation.Valid;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import cn.itsource.pojo.query.PageQueryWrapper;
import cn.itsource.result.JSONResult;
import cn.itsource.result.PageResult;

@Tag(name = "$!{table.comment}",description = "$!{table.comment}")
@RestController
@RequestMapping("/manager/${table.entityPath}")
public class ${entity}Controller{

    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;

    @Operation( summary= "保存${entity}",description = "基础对象保存接口")
    @Parameter(name = "${table.entityPath}",description = "保存的对象",required = true)
    @PostMapping
    public JSONResult save(@RequestBody @Valid ${entity} ${table.entityPath}){
        return JSONResult.success(${table.entityPath}Service.save(${table.entityPath}));
    }

    @Operation( summary= "修改${entity}",description = "基础对象修改接口")
    @Parameter(name = "${table.entityPath}",description = "修改的对象",required = true)
    @PutMapping
    public JSONResult update(@RequestBody  @Valid ${entity} ${table.entityPath}){
        return JSONResult.success(${table.entityPath}Service.updateById(${table.entityPath}));
    }

    //删除对象
    @Operation( summary= "删除${entity}",description = "基础对象删除接口，采用状态删除")
    @Parameter(name = "id",description = "删除的对象ID",required = true)
    @DeleteMapping(value="/{id}")
    public JSONResult delete(@PathVariable("id") Long id){
        return JSONResult.success(${table.entityPath}Service.removeById(id));
    }

    //获取对象
    @Operation( summary= "获取${entity}",description = "基础对象获取接口")
    @Parameter(name = "id",description = "查询的对象ID",required = true)
    @GetMapping(value = "/{id}")
    public JSONResult get(@PathVariable("id")Long id){
        return JSONResult.success(${table.entityPath}Service.getById(id));
    }

    //获取列表:PageQueryWrapper作为通用的查询对象
    @Operation( summary= "查询${entity}列表",description = "基础对象列表查询，不带分页")
    @Parameter(name = "query",description = "查询条件",required = true)
    @PostMapping(value = "/list")
    public JSONResult list(@RequestBody PageQueryWrapper<${entity}> query){
        QueryWrapper<${entity}> wrapper = new QueryWrapper<>();
        //实体类作为查询条件
        wrapper.setEntity(query.getQuery());
        return JSONResult.success(${table.entityPath}Service.list(wrapper));
    }

    //分页查询
    @Operation( summary= "查询${entity}分页列表",description = "基础对象列表查询，带分页")
    @Parameter(name = "query",description = "查询条件，需要指定分页条件",required = true)
    @PostMapping(value = "/pagelist")
    public JSONResult page(@RequestBody PageQueryWrapper<${entity}> query){
        //分页查询
        Page<${entity}> page = new Page<${entity}>(query.getPage(),query.getRows());
        QueryWrapper<${entity}> wrapper = new QueryWrapper<>();
        //实体类作为查询条件
        wrapper.setEntity(query.getQuery());
        //分页查询
        page = ${table.entityPath}Service.page(page,wrapper);
        //返回结果
        return JSONResult.success(new PageResult<${entity}>(page.getTotal(),page.getRecords()));
    }

}
